name: Node.js CI

on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ElectroKerotDevelopment
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up .env file
      env:
        PORT: ${{ secrets.PORT }}
        DATABASE_URI: ${{ secrets.DATABASE_URI }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        echo "PORT=$PORT" >> .env
        echo "DATABASE_URI=$DATABASE_URI" >> .env
        echo "DATABASE_NAME=$DATABASE_NAME" >> .env
        echo "JWT_SECRET=$JWT_SECRET" >> .env
        
    - name: Run through test
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ secrets.AWS_PUBLIC_REGISTRY }}/electrokerot-web-dev:latest
    

